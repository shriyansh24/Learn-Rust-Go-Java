name: Go CI

on:
  push:
    branches: [ main, claude/** ]
    paths:
      - 'go/**'
      - '.github/workflows/go-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'go/**'

jobs:
  test:
    name: Test Go Examples
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Check Go version
      run: go version

    - name: Build Go examples
      run: |
        for dir in go/examples/*/; do
          if [ -f "$dir/go.mod" ] || [ -f "$dir"/*.go ]; then
            echo "Building $dir"
            cd "$dir"
            if [ -f "go.mod" ]; then
              go build -v ./...
            else
              go build -v *.go
            fi
            cd - > /dev/null
          fi
        done

    - name: Run Go tests
      run: |
        for dir in go/examples/*/; do
          if [ -f "$dir/go.mod" ] || [ -f "$dir"/*_test.go ]; then
            echo "Testing $dir"
            cd "$dir"
            go test -v ./...
            cd - > /dev/null
          fi
        done

    - name: Run Go vet
      run: |
        for dir in go/examples/*/; do
          if [ -f "$dir/go.mod" ] || [ -f "$dir"/*.go ]; then
            echo "Vetting $dir"
            cd "$dir"
            go vet ./...
            cd - > /dev/null
          fi
        done

    - name: Check formatting
      run: |
        unformatted=$(gofmt -l go/)
        if [ -n "$unformatted" ]; then
          echo "The following files are not formatted:"
          echo "$unformatted"
          exit 1
        fi

    - name: Run staticcheck
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        for dir in go/examples/*/; do
          if [ -f "$dir/go.mod" ] || [ -f "$dir"/*.go ]; then
            echo "Running staticcheck for $dir"
            cd "$dir"
            staticcheck ./... || true
            cd - > /dev/null
          fi
        done
